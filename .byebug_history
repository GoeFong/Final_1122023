continue
a.save
a.user_id=3
a.save=12
a.save=1=1
[A=1
a.save=1
a
a.save
a.user_id=2
a
a.errors.messages
a.erorrs.messages
a.roll
a.save
a.user_id=3
a
a.update(board_params)
a.update(board_paramms)
board_params
a =Board.find(params[:id])
a Board.find(params[:id])
continue
Congviec.ransack(params[:q])
Congvieransack()ấm[:qư
continue
quit
y
quit
ransackable_methods
continue
quit
c.errors
c =  event.update(google_event_id: 1)
c
c.errors
event
a
ge.id
ge
c =  event.update(google_event_id: ge.id)
event.errors
 event.update(google_event_id: ge.id)
ge = client.insert_event(Congviec::CALENDAR_ID, g_event)
 g_event = get_event(event)
client = get_google_calendar_client(event.user_giamsat)
continue
quit
qiut
client.delete_event(Congviec::CALENDAR_ID, event.google_event_id)
client = get_google_calendar_client(event.user_giamsat)
quit
 event.update(google_event_id: ge.id)
ge = client.insert_event(Congviec::CALENDAR_ID, g_event)
 g_event = get_event(event)
client = get_google_calendar_client(event.user_giamsat)
quit
event
 event.google_event_id
 client = get_google_calendar_client(event.user_giamsat)
event.user_giamsat
(event.user_giamsat
quit
get_event(event)
quit
get_event(event)
quit
get_event(event)
continue
@congviec.errors
@congviec.erors
@congviec.save
quit
ge = client.insert_event(Congviec::CALENDAR_ID, g_event)
client = get_google_calendar_client(event.user_giamsat)
ge = client.insert_event(Congviec::CALENDAR_ID, g_event)
g_event = get_event(event)
 get_event(event)
quit
 get_event(event)
quit
 get_event(event)
quit
get_event(event)
quit
get_event(event)
quit
get_event(event)
quit
get_event(event)
quit
get_event(event)
quit
get_event(event)
quit
 get_event(event)
quit
DateTime.parse(event.ngay_bd.to_datetime.to_s)
DateTime.parse(a.ngay_bd.to_datetime.to_s)
 get_event(event)
quit
 get_event(event)
quit
 get_event(event)
quit
event_attendees(event)
event.diachi
event.email_guest_list.map {|guest| { email: guest, displayName: guest.split('@')[0], organizer: false }} << { email: event.user_giamsat.email, displayName: event.user_giamsat.name, organizer: true}
get_event(event)
c
c=Google::Apis::CalendarV3::Event.new
Google::Apis::CalendarV3::Event.new
    })
      sendUpdates: 'all'
      sendNotifications: true,
      },
        use_default: false
      reminders: {
      attendees: event_attendees(event),
      },
        displayName: event.user_giamsat.name
        email: event.user_giamsat.email, 
      organizer: {
      },
        time_zone: 'Asia/Ho_Chi_Minh',
        date_time: event.ngay_kt.to_datetime.to_s,
      end: {
      },
        time_zone: 'Asia/Ho_Chi_Minh', 
        date_time: event.ngay_bd.to_datetime.to_s,
      start: {
      description: "Xem #{event.macongviec} trực tiếp tại at #{event.url_congviec}",
      location: event.diachi,
      summary: "Lịch công việc #{event.macongviec} | #{event.board.name}",
Google::Apis::CalendarV3::Event.new({
get_event(event)
event_attendees(event)
event.user_giamsat.email
event.ngay_kt.to_datetime.to_s
event.ngay_bd.to_datetime.to_s
"Xem #{event.macongviec} trực tiếp tại at #{event.url_congviec}"
Xem #{event.macongviec} trực tiếp tại at #{event.url_congviec}
event.macongviec
 get_event(event)
get_google_calendar_client(event.user_giamsat)
continue
contine
auth.credentials.refresh_token
auth.credentials.refresh_at
auth.credentials.refressh_at
auth.credentials.expires_at
auth.credentials.expiris_at
auth.credentials.expiat
auth.credentials.token
auth.credentia.token
if user
user?
user
quit
User.where(provider: auth.try(:provider))
User.where(provider: auth.try(ider) || auth["provider"], uid: auth.try(:uid) || auth["uid"]).first
auth
quit
 get_google_calendar_client(event.user_giamsat)
event.user_giamsat
quit
event.user_giamsat
 get_google_calendar_client(event.user_giamsat)
continue
@congviec.errors.messages
@congviec.éerors.mesages
@congviec.save
@congviecs@congviec
@congviec.save
continue
@congviec.errors.messages
@congviec.errorsmessage
@congviec.errors.massega
@congviec.errors
@congviec.save.errors
@congviec.save.rerors
@congviec.save.erors
@congviec.save
continue
@congviec.errors.messages
@congviec.errors.message
@congviec.errors
@congviec.erros
a.errror
a.error
a.errors.messages
a =@congviec.save
@congviec
continue
params_cv[:macongviec].present?
params_cv
continue
@q.joins(congviec_users: :user)
@q
params[:q]
continue
params[:q]
params
@q
!q
@q.joins(congviec_users: :user)
@q.joins(congviec_users: :ủe)
@q
continue
@congviec_trangthai
@congvie_trangthai
continue
@congviecs
starts
ends
continue
params_cv[:start_date_between].split(" - ").first.to_date
params_cv[:start_date_between].split(" - ").first
params_cv[:start_date_between].split(" - ")
params_cv[:start_date_between].split(" - +)
params_cv[:start_date_between].split(" - )
params_cv[:start_date_between]
params_cv[:strt_date_between]
continue
user_ids
continue
user_ids
continue
user_ids
users_ids
user_id
ú_id
continue
@congviecs
continue
@congviecs
continue
@congviecs
continue
@continue
@congviecs
continue
@congviecs
continue
contienue
@congviecs
continue
@congviec_users
@congviecusers
continue
vanban_congviec_user_params
vanban_congviec_users_params
users_params
user_params
continue
@ec_users = @vanban.congviec_users.new(p
